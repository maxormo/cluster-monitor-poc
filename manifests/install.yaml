---
apiVersion: v1
kind: Namespace
metadata:
  name: shared

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-monitor
  namespace: shared

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-monitor
rules:
- apiGroups: ['']
  resources: [events]
  verbs: [create, patch, update]
- apiGroups: ['']
  resources: [nodes]
  verbs: [get, watch, list, update]
- apiGroups: ['']
  resources: [nodes/status]
  verbs: [patch]
- apiGroups: ['']
  resources: [pods]
  verbs: [get, watch, list]
- apiGroups: ['']
  resources: [pods/eviction]
  verbs: [create]
- apiGroups: [extensions]
  resources: [daemonsets]
  verbs: [get, watch, list]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-monitor
roleRef: {apiGroup: rbac.authorization.k8s.io, kind: ClusterRole, name: cluster-monitor}
subjects:
- {kind: ServiceAccount, name: cluster-monitor, namespace: shared}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-monitor
  namespace: shared
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cluster-monitor
  template:
    metadata:
      labels:
        app: cluster-monitor
      name: cluster-monitor
      namespace: shared
    spec:
      containers:
      - name: cluster-monitor
        image: maxormo/cluster-monitor:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: CURRENT_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - /app/cluster-monitor-poc
        volumeMounts:
        - name: kubernetes-config
          mountPath: /etc/kubernetes
          readOnly: true
        
      volumes:
      - name: kubernetes-config
        hostPath:
          path: /etc/kubernetes
      serviceAccountName: cluster-monitor


